name: deploy on rancher
on:
  workflow_dispatch:
    inputs:
      deploy:
        type: boolean
        description: Deploy if not a release
        default: false
  push: ~
  release:
    types: [published]
env:
  RANCHER_API_BASE: https://rancher.acdh-dev.oeaw.ac.at/v3
  RANCHER_PROJECT: Dissemination services
  RANCHER_NAMESPACE: arche-thumbnails
jobs:
  testAndDeploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: json,pcre,yaml,imagick,pdo,pdo_sqlite,pdo_pgsql
          coverage: xdebug
      - name: fonts
        run: sudo apt install -y gsfonts
      - name: composer
        run: composer update
      - name: phpstan level 4
        run: vendor/bin/phpstan analyze -l 4 src/ index.php
      #- uses: mxschmitt/action-tmate@v3
      - name: phpunit
        run: XDEBUG_MODE=coverage vendor/bin/phpunit tests
      - name: prepare arche-prod and arche-cur configs
        run: |
          mkdir tmp && cd tmp 
          composer require -n zozlak/yaml-merge
          curl https://arche.acdh.oeaw.ac.at/api/describe > prod.yaml
          curl https://arche-curation.acdh-dev.oeaw.ac.at/api/describe > cur.yaml
          vendor/bin/yaml-edit.php --src prod.yaml --src '{"dbConn": {"guest": "pgsql: host=10.6.16.94 port=5433 user=arche_thumbnails dbname=arche_prod"}}' ../archeProd.yaml
          vendor/bin/yaml-edit.php --src cur.yaml  --src '{"dbConn": {"guest": "pgsql: host=10.6.16.94 port=5433 user=arche_thumbnails dbname=arche_cur"}}'  ../archeCur.yaml
          cd .. && rm -fR tmp
      - name: build docker image
        run: |
          git reset --hard HEAD
          curl https://arche.acdh.oeaw.ac.at/api/describe > build/docroot/prod.yaml && 
          rm -fR vendor
          mkdir build/docroot && cp -R `ls -1 | grep -v ^build` build/docroot/ && cp build/config/arche.yaml build/docroot/config.yaml && cp -R build/assets/arche build/docroot/assets && mkdir build/docroot/cache && mkdir build/docroot/tmp && cp .htaccess build/docroot/
          docker build --rm -t "acdhch/$RANCHER_NAMESPACE:latest" --build-arg VARIANT=production --label "buildUrl=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" build
      - uses: mxschmitt/action-tmate@v3
      #- name: test image
      #  run: |
      #    docker run -d --name "$RANCHER_NAMESPACE" -p 8080:80 "acdhch/$RANCHER_NAMESPACE:latest"
      #    sleep 1
      #    # separate title image - Image class
      #    curl -f -i 'http://127.0.0.1:8080/id.acdh.oeaw.ac.at/hanslick-vms?width=150'
      #    curl -f -i 'http://127.0.0.1:8080/id.acdh.oeaw.ac.at/hanslick-vms?width=150'
      #    # collection - Fallback class - no thumbnail
      #    curl -f -i 'http://127.0.0.1:8080/id.acdh.oeaw.ac.at/hanslick-vms/editions?width=150' | grep '404 Not Found'
      #    curl -f -i 'http://127.0.0.1:8080/id.acdh.oeaw.ac.at/hanslick-vms/editions?width=150' | grep '404 Not Found'
      #    # text file - Fallback class - no thumbnail
      #    curl -f -i 'http://127.0.0.1:8080/id.acdh.oeaw.ac.at/hanslick-vms/t__01_VMS_1854_TEI_AW_26-01-21-TEI-P5.xml?width=150' | grep '404 Not Found'
      #    curl -f -i 'http://127.0.0.1:8080/id.acdh.oeaw.ac.at/hanslick-vms/t__01_VMS_1854_TEI_AW_26-01-21-TEI-P5.xml?width=150' | grep '404 Not Found'
      #    # image - Image class
      #    curl -f -i 'http://127.0.0.1:8080/id.acdh.oeaw.ac.at/hanslick-vms/vms_1854_002.tif'
      #    curl -f -i 'http://127.0.0.1:8080/id.acdh.oeaw.ac.at/hanslick-vms/vms_1854_002.tif'
      - name: authorize against docker hub
        if: github.event_name == 'release' && github.event.action == 'published' || inputs.deploy
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: push to docker hub
        if: github.event_name == 'release' && github.event.action == 'published' || inputs.deploy
        run: docker push "acdhch/$RANCHER_NAMESPACE:latest"
      - name: redeploy on rancher
        if: github.event_name == 'release' && github.event.action == 'published' || inputs.deploy
        run: |
          BASE_URL=`curl -s -H "Authorization: Bearer ${{ secrets.RANCHERTOKEN }}" "$RANCHER_API_BASE/projects" | jq -r ".data[] | select(.name == \"$RANCHER_PROJECT\") | .links.workloads"`
          curl -i -X POST -H "Authorization: Bearer ${{ secrets.RANCHERTOKEN }}" "$BASE_URL/deployment:$RANCHER_NAMESPACE:$RANCHER_NAMESPACE?action=redeploy"
      - name: coveralls
        run: |
          export COVERALLS_RUN_LOCALLY=1
          export COVERALLS_REPO_TOKEN=${{ secrets.coverallsToken }}
          rm -fR composer.json composer.lock vendor
          composer require php-coveralls/php-coveralls
          php vendor/bin/php-coveralls -v


